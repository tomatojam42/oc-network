(* File auto-generated by obus-gen-interface, DO NOT EDIT. *)
open OBus_member
module Org_freedesktop_NetworkManager_Device : sig
  val interface : OBus_name.interface
  val m_Delete : (unit, unit) Method.t
  val m_Disconnect : (unit, unit) Method.t
  val m_GetAppliedConnection : (int32, (string * (string * OBus_value.V.single) list) list * int64) Method.t
  val m_Reapply : ((string * (string * OBus_value.V.single) list) list * int64 * int32, unit) Method.t
  val s_StateChanged : (int32 * int32 * int32) Signal.t
  val p_ActiveConnection : (OBus_path.t, [ `readable ]) Property.t
  val p_Autoconnect : (bool, [ `readable | `writable ]) Property.t
  val p_AvailableConnections : (OBus_path.t list, [ `readable ]) Property.t
  val p_Capabilities : (int32, [ `readable ]) Property.t
  val p_DeviceType : (int32, [ `readable ]) Property.t
  val p_Dhcp4Config : (OBus_path.t, [ `readable ]) Property.t
  val p_Dhcp6Config : (OBus_path.t, [ `readable ]) Property.t
  val p_Driver : (string, [ `readable ]) Property.t
  val p_DriverVersion : (string, [ `readable ]) Property.t
  val p_FirmwareMissing : (bool, [ `readable ]) Property.t
  val p_FirmwareVersion : (string, [ `readable ]) Property.t
  val p_Interface : (string, [ `readable ]) Property.t
  val p_Ip4Address : (int32, [ `readable ]) Property.t
  val p_Ip4Config : (OBus_path.t, [ `readable ]) Property.t
  val p_Ip6Config : (OBus_path.t, [ `readable ]) Property.t
  val p_IpInterface : (string, [ `readable ]) Property.t
  val p_LldpNeighbors : ((string * OBus_value.V.single) list list, [ `readable ]) Property.t
  val p_Managed : (bool, [ `readable | `writable ]) Property.t
  val p_Metered : (int32, [ `readable ]) Property.t
  val p_Mtu : (int32, [ `readable ]) Property.t
  val p_NmPluginMissing : (bool, [ `readable ]) Property.t
  val p_PhysicalPortId : (string, [ `readable ]) Property.t
  val p_Real : (bool, [ `readable ]) Property.t
  val p_State : (int32, [ `readable ]) Property.t
  val p_StateReason : (int32 * int32, [ `readable ]) Property.t
  val p_Udi : (string, [ `readable ]) Property.t
  type 'a members = {
    m_Delete : 'a OBus_object.t -> unit -> unit Lwt.t;
    m_Disconnect : 'a OBus_object.t -> unit -> unit Lwt.t;
    m_GetAppliedConnection : 'a OBus_object.t -> int32 -> ((string * (string * OBus_value.V.single) list) list * int64) Lwt.t;
    m_Reapply : 'a OBus_object.t -> (string * (string * OBus_value.V.single) list) list * int64 * int32 -> unit Lwt.t;
    p_ActiveConnection : 'a OBus_object.t -> OBus_path.t React.signal;
    p_Autoconnect : ('a OBus_object.t -> bool React.signal) * ('a OBus_object.t -> bool -> unit Lwt.t);
    p_AvailableConnections : 'a OBus_object.t -> OBus_path.t list React.signal;
    p_Capabilities : 'a OBus_object.t -> int32 React.signal;
    p_DeviceType : 'a OBus_object.t -> int32 React.signal;
    p_Dhcp4Config : 'a OBus_object.t -> OBus_path.t React.signal;
    p_Dhcp6Config : 'a OBus_object.t -> OBus_path.t React.signal;
    p_Driver : 'a OBus_object.t -> string React.signal;
    p_DriverVersion : 'a OBus_object.t -> string React.signal;
    p_FirmwareMissing : 'a OBus_object.t -> bool React.signal;
    p_FirmwareVersion : 'a OBus_object.t -> string React.signal;
    p_Interface : 'a OBus_object.t -> string React.signal;
    p_Ip4Address : 'a OBus_object.t -> int32 React.signal;
    p_Ip4Config : 'a OBus_object.t -> OBus_path.t React.signal;
    p_Ip6Config : 'a OBus_object.t -> OBus_path.t React.signal;
    p_IpInterface : 'a OBus_object.t -> string React.signal;
    p_LldpNeighbors : 'a OBus_object.t -> (string * OBus_value.V.single) list list React.signal;
    p_Managed : ('a OBus_object.t -> bool React.signal) * ('a OBus_object.t -> bool -> unit Lwt.t);
    p_Metered : 'a OBus_object.t -> int32 React.signal;
    p_Mtu : 'a OBus_object.t -> int32 React.signal;
    p_NmPluginMissing : 'a OBus_object.t -> bool React.signal;
    p_PhysicalPortId : 'a OBus_object.t -> string React.signal;
    p_Real : 'a OBus_object.t -> bool React.signal;
    p_State : 'a OBus_object.t -> int32 React.signal;
    p_StateReason : 'a OBus_object.t -> (int32 * int32) React.signal;
    p_Udi : 'a OBus_object.t -> string React.signal;
  }
  val make : 'a members -> 'a OBus_object.interface
end
module Org_freedesktop_NetworkManager_Device_Generic : sig
  val interface : OBus_name.interface
  val s_PropertiesChanged : (string * OBus_value.V.single) list Signal.t
  val p_HwAddress : (string, [ `readable ]) Property.t
  val p_TypeDescription : (string, [ `readable ]) Property.t
  type 'a members = {
    p_HwAddress : 'a OBus_object.t -> string React.signal;
    p_TypeDescription : 'a OBus_object.t -> string React.signal;
  }
  val make : 'a members -> 'a OBus_object.interface
end
module Org_freedesktop_NetworkManager_Device_Statistics : sig
  val interface : OBus_name.interface
  val s_PropertiesChanged : (string * OBus_value.V.single) list Signal.t
  val p_RefreshRateMs : (int32, [ `readable | `writable ]) Property.t
  val p_RxBytes : (int64, [ `readable ]) Property.t
  val p_TxBytes : (int64, [ `readable ]) Property.t
  type 'a members = {
    p_RefreshRateMs : ('a OBus_object.t -> int32 React.signal) * ('a OBus_object.t -> int32 -> unit Lwt.t);
    p_RxBytes : 'a OBus_object.t -> int64 React.signal;
    p_TxBytes : 'a OBus_object.t -> int64 React.signal;
  }
  val make : 'a members -> 'a OBus_object.interface
end
